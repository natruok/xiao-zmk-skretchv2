#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        BT_Clr {
            bindings = <&bt BT_CLR>;
            key-positions = <11 37>;
        };

        BT_0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <0 37>;
        };

        BT_1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <1 37>;
        };

        BT_2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <2 37>;
        };

        BT_3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <3 37>;
        };

        F_2 {
            bindings = <&kp F2>;
            key-positions = <2 40>;
        };

        Pivot_Refresh {
            bindings = <&kp LA(F5)>;
            key-positions = <40 3>;
        };

        F_4 {
            bindings = <&kp F4>;
            key-positions = <40 4>;
        };

        F_5 {
            bindings = <&kp F5>;
            key-positions = <42 7>;
        };

        Filter {
            bindings = <&kp LS(LC(L))>;
            key-positions = <42 8>;
        };

        Time {
            bindings = <&ht_kp LC(SEMI) LC(LS(SEMI))>;
            key-positions = <42 9>;
        };

        Downloads {
            bindings = <&kp LC(LA(D))>;
            key-positions = <1 39>;
            layers = <0 1 2>;
        };

        Pivot {
            bindings = <&pivot>;
            key-positions = <1 40>;
            layers = <3>;
        };

        Blanks {
            bindings = <&blanks>;
            key-positions = <5 40>;
            layers = <3>;
        };

        Paste {
            bindings = <&paste_values>;
            key-positions = <28 25>;
            layers = <3>;
        };

        Top {
            bindings = <&align_top>;
            key-positions = <17 25>;
            layers = <3>;
        };

        Bottom {
            bindings = <&align_bottom>;
            key-positions = <29 25>;
        };

        Format_Paint {
            bindings = <&none>;
            key-positions = <13 16>;
            layers = <3>;
        };
    };

    behaviors {
        ht_kp: ht_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "ht_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
        };

        ht_l: ht_l {
            compatible = "zmk,behavior-hold-tap";
            label = "ht_L";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        ht_mo_kp: ht_mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_MO_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
        };

        td_win_ctrl: td_win_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_WIN_CTRL";
            #binding-cells = <0>;
            bindings = <&ht_kp LCTRL LEFT_GUI>, <&kp LC(LEFT_GUI)>;
        };

        td_tab: td_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TAB";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp LC(TAB)>;
        };
    };

    macros {
        paste_values: paste_values {
            compatible = "zmk,behavior-macro";
            label = "PASTE_VALUES";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(V)) &kp V &kp ENTER>;
        };

        align_left: align_left {
            compatible = "zmk,behavior-macro";
            label = "ALIGN_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp L>;
        };

        align_centre: align_centre {
            compatible = "zmk,behavior-macro";
            label = "ALIGN_CENTRE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp C>;
        };

        align_right: align_right {
            compatible = "zmk,behavior-macro";
            label = "ALIGN_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp R>;
        };

        align_top: align_top {
            compatible = "zmk,behavior-macro";
            label = "ALIGN_TOP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp T>;
        };

        align_mid: align_mid {
            compatible = "zmk,behavior-macro";
            label = "ALIGN_MID";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp M>;
        };

        align_bottom: align_bottom {
            compatible = "zmk,behavior-macro";
            label = "ALIGN_BOTTOM";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp A &kp B>;
        };

        top_border: top_border {
            compatible = "zmk,behavior-macro";
            label = "TOP_BORDER";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp B &kp P>;
        };

        bottom_border: bottom_border {
            compatible = "zmk,behavior-macro";
            label = "BOTTOM_BORDER";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp B &kp O>;
        };

        top_thick_bottom_border: top_thick_bottom_border {
            compatible = "zmk,behavior-macro";
            label = "TOP_THICK_BOTTOM_BORDER";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp B &kp C>;
        };

        pivot: pivot {
            compatible = "zmk,behavior-macro";
            label = "PIVOT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp N &kp V>;
        };

        blanks: blanks {
            compatible = "zmk,behavior-macro";
            label = "BLANKS";
            #binding-cells = <0>;
            bindings = <&kp F5 &kp LEFT_ALT &kp S &kp K &kp ENTER>;
        };

        clear_fill: clear_fill {
            compatible = "zmk,behavior-macro";
            label = "CLEAR_FILL";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp H &kp N>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        L0_ColemakDH {
            bindings = <
&kp LEFT_ALT  &ht_kp LC(Q) Q  &ht_kp LC(W) W  &ht_kp LC(F) F  &ht_kp LC(P) P           &ht_kp LC(B) B     &kp J           &ht_kp LC(L) L  &ht_kp LC(U) U  &ht_kp LC(Y) Y  &kp COLON       &ht_kp LC(DEL) DEL
&td_tab       &ht_kp LC(A) A  &ht_kp LC(R) R  &ht_kp LC(S) S  &ht_kp LC(T) T           &ht_mo_kp 2 G      &ht_mo_kp 2 M   &ht_kp LC(N) N  &ht_kp LC(E) E  &ht_kp LC(I) I  &ht_kp LC(O) O  &kp SQT
&kp CAPSLOCK  &ht_kp LC(Z) Z  &ht_kp LC(X) X  &ht_kp LC(C) C  &ht_kp LC(D) D           &ht_kp LC(V) V     &ht_kp LC(K) K  &ht_kp LC(H) H  &kp COMMA       &kp DOT         &kp SLASH       &ht_kp LC(BACKSPACE) BACKSPACE
&td_win_ctrl  &none           &none           &ht_l 3 3       &ht_kp LSHIFT BACKSPACE  &ht_mo_kp 2 ENTER                  &kp SPACE       &mo 3           &ht_l 1 2       &none           &none
            >;
        };

        L1_Sys {
            bindings = <
&trans  &ht_kp LC(UP) UP      &none   &none   &none   &kp K_FORWARD  &none  &none   &kp F10  &kp F11  &kp F12  &trans
&trans  &ht_kp LC(DOWN) DOWN  &none   &none   &none   &kp K_BACK     &none  &kp F1  &kp F2   &kp F5   &kp F6   &trans
&trans  &none                 &none   &none   &none   &none          &none  &none   &kp F7   &kp F8   &kp F9   &trans
&trans  &trans                &trans  &trans  &trans  &trans                &trans  &trans   &trans   &trans   &trans
            >;
        };

        L2_Num {
            bindings = <
&trans  &kp LEFT_BRACKET      &kp HASH        &kp EXCLAMATION  &kp PERCENT  &kp LEFT_PARENTHESIS   &kp SQT    &kp N7  &kp N8        &kp N9  &kp ASTERISK  &trans
&trans  &kp RIGHT_BRACKET     &kp AMPERSAND   &kp DOLLAR       &kp COMMA    &kp RIGHT_PARENTHESIS  &kp MINUS  &kp N4  &kp N5        &kp N6  &kp PLUS      &kp SLASH
&trans  &kp NON_US_BACKSLASH  &kp UNDERSCORE  &kp CARET        &kp COLON    &kp AT                 &kp EQUAL  &kp N1  &kp N2        &kp N3  &kp PERIOD    &trans
&trans  &trans                &trans          &trans           &trans       &trans                            &trans  &kp NUMBER_0  &to 0   &trans        &trans
            >;
        };

        L3_Excel {
            bindings = <
&trans  &clear_fill         &kp LS(LA(LEFT))  &align_mid     &kp LS(LA(RIGHT))            &bottom_border            &kp LC(LS(MINUS))  &ht_kp LC(HOME) HOME  &ht_kp LC(UP) UP_ARROW  &ht_kp LC(END) END      &kp PAGE_UP    &trans
&trans  &kp LC(A)           &align_left       &align_centre  &align_right                 &top_thick_bottom_border  &kp LC(LS(N7))     &ht_kp LC(LEFT) LEFT  &ht_kp LC(DOWN) DOWN    &ht_kp LC(RIGHT) RIGHT  &kp PAGE_DOWN  &trans
&trans  &ht_kp LC(Y) LC(Z)  &kp LC(X)         &kp LC(C)      &kp LC(V)                    &top_border               &trans             &kp LS(SPACE)         &kp LC(SPACE)           &kp LC(MINUS)           &kp LC(PLUS)   &trans
&trans  &trans              &trans            &to 0          &ht_kp LEFT_SHIFT BACKSPACE  &trans                                       &trans                &trans                  &trans                  &trans         &trans
            >;
        };

        L4_PDF {
            bindings = <
&trans  &trans     &trans  &kp LA(LC(LBKT))  &kp LC(LA(RBKT))  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LA(N)  &trans  &trans            &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans  &trans            &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans  &trans            &trans            &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
